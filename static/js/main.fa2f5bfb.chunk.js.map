{"version":3,"sources":["components/layout/Header.tsx","components/layout/Layout.tsx","routes/home.tsx","components/Answer.tsx","components/Progress.tsx","components/Question.tsx","data/response.tsx","state/dataState.tsx","routes/step.tsx","routes/result.tsx","App.tsx","reportWebVitals.ts","lang/i18n.ts","index.tsx"],"names":["Header","className","to","src","alt","Layout","children","style","backgroundImage","backgroundSize","Home","size","Answer","answer","selectAnswer","navigate","useNavigate","answerList","map","item","type","onClick","qustionType","questionNextCode","text","code","Progress","coordinate","total","current","transform","width","Question","qustionData","id","questionText","mbtiQuestion","nextCode","qustionCode","firstType","lastType","mbtiAnswer","questionCode","resultState","atom","key","default","resultMbtiState","Step","page","search","useLocation","useMemo","URLSearchParams","useQuery","get","question","Number","useRecoilState","result","setResult","length","selectedItem","questionType","targetItem","selectedType","initialData","resultValue","isExistItem","find","realData","value","Result","useRecoilValue","resultMbti","setResultMbti","useEffect","mbti","sort","a","b","reduce","acc","console","log","App","AOS","init","once","delay","duration","easing","mirror","refresh","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","languages","resources","en","translation","ko","initLanguage","i18n","use","initReactI18next","lng","fallbackLng","keySeparator","interpolation","escapeValue","ReactDOM","render","StrictMode","getLibrary","provider","Web3Provider","document","getElementById"],"mappings":"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","file":"static/js/main.fa2f5bfb.chunk.js","sourcesContent":["import React, { FC } from 'react'\nimport { Link } from 'react-router-dom'\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// import { faLanguage } from '@fortawesome/free-solid-svg-icons'\n// import { useTranslation } from 'react-i18next'\n// import { languages, Languages, initLanguage } from '../../lang/i18n'\n\nconst Header: FC = () => {\n  // const { t, i18n } = useTranslation()\n  // const [lang, setLang] = useState<Languages>(\n  //   Object.values(languages).find((language) => language !== initLanguage) ?? 'en',\n  // )\n\n  // const handleChangeLanguage = (lang: Languages): void => {\n  //   setLang(Object.values(languages).find((language) => language !== lang) ?? 'en')\n  //   i18n.changeLanguage(lang)\n  // }\n\n  return (\n    <div className=\"flex justify-center py-6\">\n      <div className=\"w-4/6 max-w-xs\">\n        <Link to=\"/\">\n          <img src=\"./images/logo.png\" alt=\"logo\" />\n        </Link>\n      </div>\n      {/* <button\n        type=\"button\"\n        className=\"font-bold text-lg flex items-center ml-auto\"\n        key={lang}\n        onClick={() => handleChangeLanguage(lang)}>\n        <span className=\"block text-gray-100 mr-2 text-2xl\">\n          <FontAwesomeIcon icon={faLanguage} />\n        </span>\n        {t(`${lang}`)}\n      </button> */}\n    </div>\n  )\n}\n\nexport default Header\n","import React, { FC } from 'react'\nimport Header from './Header'\n\ninterface LayoutProps {\n  children: React.ReactNode\n}\n\nconst Layout: FC<LayoutProps> = ({ children }) => {\n  const gridBg = {\n    backgroundImage: 'url(/images/grid_bg.svg)',\n    backgroundSize: '12px',\n  }\n  return (\n    <div className=\"wrap overflow-hidden px-4 py-6 h-full min-h-screen\" style={gridBg}>\n      <div className=\"flex flex-col h-full max-w-lg mx-auto\">\n        <Header />\n        <main className=\"px-4 md:px-8 h-full\">{children}</main>\n      </div>\n    </div>\n  )\n}\n\nexport default Layout\n","import React, { FC } from 'react'\nimport { Link } from 'react-router-dom'\nimport { IoIosArrowForward } from 'react-icons/io'\n\nconst Home: FC = () => {\n  // view\n  return (\n    <div className=\"-mb-4 md:-mb-6\">\n      <div className=\"text-center\">\n        {/* <span className=\"p-2 font-minhye text-2xl font-bold\">갓생 지수 테스트</span>\n        <p className=\"text-5xl p-2 font-middleschool_student\">나의 갓생 유형은?</p> */}\n        <p className=\"text-god-brown py-1 \">갓생 지수 테스트</p>\n        <p className=\"text-gray-700 text-3xl font-bold py-1\">나의 갓생 유형은?</p>\n      </div>\n      <div className=\"text-center py-8\">\n        <img src=\"./images/god2.png\" alt=\"가보자고\" />\n      </div>\n      <div className=\"text-center bg-god-mint rounded-xl\">\n        <Link\n          to=\"/step?page=1\"\n          className=\"text-white font-bold px-6 py-2 inline-flex items-center justify-center\">\n          <IoIosArrowForward size=\"16\" className=\"inline-block\" />\n          <span className=\"inline-block px-2\">갓생 유형 START</span>\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n","import React, { FC } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { MBTIAnswerType, AnswerType, IndicatorType } from '../lib/type'\n\ninterface AnswerProp {\n  answer: MBTIAnswerType\n  selectAnswer: (selectedItem: AnswerType, qustionType: IndicatorType) => void\n}\n\nconst Answer: FC<AnswerProp> = ({ answer, selectAnswer }) => {\n  const navigate = useNavigate()\n  const { answerList } = answer\n\n  const handleSelect = (selectedItem: AnswerType): void => {\n    selectAnswer(selectedItem, answer.qustionType)\n    navigate(answer.questionNextCode ? `/step?page=${answer.questionNextCode}` : '/result')\n  }\n\n  return (\n    <div>\n      {answerList.map((item) => (\n        <div className=\"py-2\" key={item.code}>\n          <section>\n            <button type=\"button\" className=\"block w-full\" onClick={() => handleSelect(item)}>\n              <span className=\"block px-4 py-4 bg-white rounded-xl\">{item.text}</span>\n            </button>\n          </section>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default Answer\n","import React, { FC } from 'react'\n// import { ImFire } from 'react-icons/im'\n// import { FaDove } from 'react-icons/fa'\n\ninterface ProgressProp {\n  total: number\n  current: number\n}\n\nconst Progress: FC<ProgressProp> = ({ total, current }) => {\n  const coordinate = (100 / total) * current\n  return (\n    <>\n      <div className=\"w-full h-5 bg-white border-2 rounded-xl border-god-gray shadow-lg relative\">\n        {/* <ImFire size={30} className=\"absolute top-1/2 transform  -translate-y-1/2 text-god-red\" /> */}\n        <div\n          className=\"transition-all\"\n          style={{ transform: `translateX(calc(${coordinate}% - 16px))` }}>\n          <img\n            src=\"./images/progress.png\"\n            className=\"w-9 absolute top-1/2 transform -translate-y-1/2\"\n            alt=\"fire\"\n          />\n        </div>\n        <div className=\"block w-full h-full rounded-xl overflow-hidden\">\n          <span\n            className=\"block h-full bg-god-light-mint\"\n            style={{ width: `${coordinate}%` }}></span>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Progress\n","import React, { FC } from 'react'\nimport { MBTIQuestionType } from '../lib/type'\n\ninterface QuestionProp {\n  qustionData: MBTIQuestionType\n}\n\nconst Question: FC<QuestionProp> = ({ qustionData }) => {\n  const { id, questionText } = qustionData\n  return (\n    <>\n      <h3 className=\"text-3xl font-bold text-center py-2\">Question {id}</h3>\n      <p className=\"text-center py-1\">{questionText}</p>\n    </>\n  )\n}\n\nexport default Question\n","import { MBTIAnswerType, MBTIQuestionType } from '../lib/type'\n\nexport const data = {\n  count: 1,\n}\n\nexport const mbtiQuestion: MBTIQuestionType[] = [\n  {\n    id: 1,\n    code: 1,\n    nextCode: 2,\n    qustionType: 'EI',\n    qustionCode: 1,\n    firstType: 'E',\n    lastType: 'I',\n    questionText: '일할때 나의 능률은?',\n  },\n  {\n    id: 2,\n    code: 2,\n    nextCode: 3,\n    qustionType: 'TF',\n    qustionCode: 3,\n    firstType: 'T',\n    lastType: 'F',\n    questionText: '나에게 단 하나 주어진다면?',\n  },\n  {\n    id: 3,\n    code: 3,\n    nextCode: 4,\n    qustionType: 'PJ',\n    qustionCode: 4,\n    firstType: 'P',\n    lastType: 'J',\n    questionText: '미래의 내 모습은?',\n  },\n  {\n    id: 4,\n    code: 4,\n    nextCode: 5,\n    qustionType: 'NS',\n    qustionCode: 2,\n    firstType: 'N',\n    lastType: 'S',\n    questionText: '당신이 지금 즐기고 있는 파티의 분위기는?',\n  },\n  {\n    id: 5,\n    code: 5,\n    nextCode: 6,\n    qustionType: 'EI',\n    qustionCode: 1,\n    firstType: 'E',\n    lastType: 'I',\n    questionText: '나에게 더 자주 일어나는 일은?',\n  },\n  {\n    id: 6,\n    code: 6,\n    nextCode: 7,\n    qustionType: 'TF',\n    qustionCode: 3,\n    firstType: 'T',\n    lastType: 'F',\n    questionText: '나만의 갈등과 분쟁 해결 방법은?',\n  },\n  {\n    id: 7,\n    code: 7,\n    nextCode: 8,\n    qustionType: 'PJ',\n    qustionCode: 4,\n    firstType: 'P',\n    lastType: 'J',\n    questionText: '생전 처음 해 보는 새로운 메뉴를 요리할 때 나의 모습은?',\n  },\n  {\n    id: 8,\n    code: 8,\n    nextCode: 9,\n    qustionType: 'NS',\n    qustionCode: 2,\n    firstType: 'N',\n    lastType: 'S',\n    questionText: '누군가가 자신이 생각해 낸 아이디어라며 이를 소개할 때, 나는',\n  },\n  {\n    id: 9,\n    code: 9,\n    nextCode: 10,\n    qustionType: 'TF',\n    qustionCode: 3,\n    firstType: 'T',\n    lastType: 'F',\n    questionText: '나는 둘 중 이렇게 생각한다.',\n  },\n  {\n    id: 10,\n    code: 10,\n    nextCode: 11,\n    qustionType: 'PJ',\n    qustionCode: 4,\n    firstType: 'P',\n    lastType: 'J',\n    questionText: '새로운 사람들을 만났을 때,',\n  },\n  {\n    id: 11,\n    code: 11,\n    nextCode: 12,\n    qustionType: 'NS',\n    qustionCode: 2,\n    firstType: 'N',\n    lastType: 'S',\n    questionText: '나는 상대방과 대화할 때,',\n  },\n  {\n    id: 12,\n    code: 12,\n    nextCode: 0,\n    qustionType: 'EI',\n    qustionCode: 1,\n    firstType: 'E',\n    lastType: 'I',\n    questionText: '월요일 아침부터 회의가 잡혔다.ㅠㅠ 호의 할 때, 당신의 모습은?',\n  },\n]\n\nexport const mbtiAnswer: MBTIAnswerType[] = [\n  {\n    id: 1,\n    questionCode: 1,\n    questionNextCode: 2,\n    qustionType: 'EI',\n    qustionCode: 1,\n    answerList: [\n      {\n        code: 0,\n        type: 'E',\n        text: '신속 정확하게!',\n      },\n      {\n        code: 1,\n        type: 'I',\n        text: '충분한 여유를 가지고~',\n      },\n    ],\n  },\n  {\n    id: 2,\n    questionCode: 2,\n    questionNextCode: 3,\n    qustionType: 'TF',\n    qustionCode: 3,\n    answerList: [\n      {\n        code: 0,\n        type: 'F',\n        text: '세익스피어',\n      },\n      {\n        code: 1,\n        type: 'T',\n        text: '아인슈타인',\n      },\n    ],\n  },\n  {\n    id: 3,\n    questionCode: 3,\n    questionNextCode: 4,\n    qustionType: 'PJ',\n    qustionCode: 4,\n    answerList: [\n      {\n        code: 0,\n        type: 'J',\n        text: '현재 목표에 맞는 단계를 착실하게 수행 중이다.',\n      },\n      {\n        code: 1,\n        type: 'P',\n        text: '안정적인 길보다 내가 하고싶은 일을 하고 있다.',\n      },\n    ],\n  },\n  {\n    id: 4,\n    questionCode: 4,\n    questionNextCode: 5,\n    qustionType: 'NS',\n    qustionCode: 2,\n    answerList: [\n      {\n        code: 0,\n        type: 'N',\n        text: '지적으로 나를 자극하는 대화가 오가는 중',\n      },\n      {\n        code: 1,\n        type: 'S',\n        text: '자유롭고 딱딱하지 않은 분위기',\n      },\n    ],\n  },\n  {\n    id: 5,\n    questionCode: 5,\n    questionNextCode: 6,\n    qustionType: 'EI',\n    qustionCode: 1,\n    answerList: [\n      {\n        code: 0,\n        type: 'I',\n        text: '어떤 사람은 뭘 물어봐 놓고도 내가 잠시 할 말을 생각하는 그새를 못 참고 또다른 걸 묻거나 자기 얘길 시작한다.',\n      },\n      {\n        code: 1,\n        type: 'E',\n        text: '뭔가를 물어보면, 바로바로 대답을 안 해서 답답한 사람들이 있다.         ',\n      },\n    ],\n  },\n  {\n    id: 6,\n    questionCode: 6,\n    questionNextCode: 7,\n    qustionType: 'TF',\n    qustionCode: 3,\n    answerList: [\n      {\n        code: 0,\n        type: 'T',\n        text: '정당,합리적인 기준 원칙적',\n      },\n      {\n        code: 1,\n        type: 'F',\n        text: '서로간의 믿음과 이해의 인간적 방법',\n      },\n    ],\n  },\n  {\n    id: 7,\n    questionCode: 7,\n    questionNextCode: 8,\n    qustionType: 'PJ',\n    qustionCode: 4,\n    answerList: [\n      {\n        code: 0,\n        type: 'J',\n        text: '레시피를 거의 그대로 따라 한다. 제시된 시간과 순서를 가능한 한 정확히 지키려고 한다.',\n      },\n      {\n        code: 1,\n        type: 'P',\n        text: '상황에 따라 단계를 뛰어넘기도 하고 순서를 뒤바꾸기도 한다. 요리에 대한 기본적인 상식과 감이 레시피보다 더 중요할 수 있다고 생각한다.         ',\n      },\n    ],\n  },\n  {\n    id: 8,\n    questionCode: 8,\n    questionNextCode: 9,\n    qustionType: 'NS',\n    qustionCode: 2,\n    answerList: [\n      {\n        code: 0,\n        type: 'N',\n        text: '독창적이고 기발한 아이디어인지를 가장 먼저 본다. 평소 나의 생각을 한 단계 발전시키는 데 도움이 될 만한 얘기라면 더 흥미롭다.',\n      },\n      {\n        code: 1,\n        type: 'S',\n        text: '아이디어의 실현 가능성을 가장 먼저 본다. 그렇지 않은 아이디어를 들으면 \"여기가 미국인 줄 아냐?\"고 되묻고 싶어진다.',\n      },\n    ],\n  },\n  {\n    id: 9,\n    questionCode: 9,\n    questionNextCode: 10,\n    qustionType: 'TF',\n    qustionCode: 3,\n    answerList: [\n      {\n        code: 0,\n        type: 'T',\n        text: '감정은 비이성적이고 시비를 가릴 수 없어서, 진실 또는 진리를 왜곡하곤 한다. 일을 그르치는 건 감정이 앞서는 사람들 때문인 경우가 많다.',\n      },\n      {\n        code: 1,\n        type: 'F',\n        text: '논리적인 분석, 이성적인 사리 판단도 물론 중요하지만, 때와 장소를 불문하고 논리만 내세우는 사람들을 보면 안타깝고 답답하다.',\n      },\n    ],\n  },\n  {\n    id: 10,\n    questionCode: 10,\n    questionNextCode: 11,\n    qustionType: 'PJ',\n    qustionCode: 4,\n    answerList: [\n      {\n        code: 0,\n        type: 'P',\n        text: '사람들에 대한 사전 정보없이, 일상적인 이야기로 대화를 시작하는 편이 더 자연스럽다. 대화 도중 화젯거리는 계속해서 생겨난다.',\n      },\n      {\n        code: 1,\n        type: 'J',\n        text: '대화에 앞서 사람들에 대한 정보가 주어지거나 사람들의 입장을 미리 파악하고 있으면, 더 생산적인 대화가 될 것이다.',\n      },\n    ],\n  },\n  {\n    id: 11,\n    questionCode: 11,\n    questionNextCode: 12,\n    qustionType: 'NS',\n    qustionCode: 2,\n    answerList: [\n      {\n        code: 0,\n        type: 'S',\n        text: '사람들의 표정, 눈빛, 말투, 억양 등을 보고 들으면서 그 사람이 말하고자 하는 바를 알아챌 수 있다.',\n      },\n      {\n        code: 1,\n        type: 'N',\n        text: '그가 사용한 단어의 숨은 의미가 뭔지, 그가 제시한 유일한 사례가 결론적으로 무엇을 상징하는지 짐작할 수 있다.',\n      },\n    ],\n  },\n  {\n    id: 12,\n    questionCode: 12,\n    questionNextCode: 0,\n    qustionType: 'EI',\n    qustionCode: 1,\n    answerList: [\n      {\n        code: 0,\n        type: 'I',\n        text: '내가 어떤 내용을 설명하거나 설득해야 하는지, 사전에 파악하고 준비할 시간이 필요하다.',\n      },\n      {\n        code: 1,\n        type: 'E',\n        text: '나는 말하면서 동시에 생각할 수 있다. 사실 무언가에 대해 이야기하는 와중에 더 좋은 생각이 번뜩이기도 한다.',\n      },\n    ],\n  },\n]\n","import { atom } from 'recoil'\nimport { ResultType } from '../lib/type'\n\nexport const resultState = atom<ResultType[]>({\n  key: 'resultState',\n  default: [],\n})\n\nexport const resultMbtiState = atom<string>({\n  key: 'resultMbtiState',\n  default: 'ENTJ',\n})\n","import React, { FC, useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { useRecoilState } from 'recoil'\nimport Answer from '../components/Answer'\nimport Progress from '../components/Progress'\nimport Question from '../components/Question'\nimport { mbtiAnswer, mbtiQuestion } from '../data/response'\nimport { AnswerType, CategoryType, IndicatorType, ResultType } from '../lib/type'\nimport { resultState } from '../state/dataState'\n\nconst useQuery = (): URLSearchParams => {\n  const { search } = useLocation()\n  return useMemo(() => new URLSearchParams(search), [search])\n}\n\nconst Step: FC = () => {\n  const page = useQuery().get('page')\n  const question = mbtiQuestion[Number(page) - 1]\n  const answer = mbtiAnswer[Number(page) - 1]\n\n  const [result, setResult] = useRecoilState(resultState)\n\n  const accResultData = (targetItem: ResultType, selectedType: CategoryType): ResultType[] => {\n    const resultData = result.map((item) => {\n      if (item.qustionType === targetItem.qustionType) {\n        const value = targetItem.resultValue[question.firstType]\n        return {\n          ...item,\n          resultValue: {\n            [question.firstType]:\n              targetItem.firstType === selectedType\n                ? (value as number) + 1\n                : targetItem.resultValue[question.firstType],\n          },\n        }\n      }\n      return item\n    })\n    return resultData\n  }\n\n  const selectAnswer = (selectedItem: AnswerType, questionType: IndicatorType): void => {\n    const initialData: ResultType = {\n      qustionType: question.qustionType,\n      qustionCode: question.qustionCode,\n      firstType: question.firstType,\n      lastType: question.lastType,\n      resultValue: {\n        [question.firstType]: selectedItem.type === question.firstType ? 1 : 0,\n      },\n    }\n    const isExistItem = result.find((item) => item.qustionType === questionType)\n    const realData = isExistItem\n      ? accResultData(isExistItem, selectedItem.type)\n      : [...result, initialData]\n    setResult(realData)\n  }\n\n  // view\n  return (\n    <div className=\"h-full flex flex-col justify-between py-12\">\n      <Progress total={mbtiQuestion.length} current={Number(page)} />\n      <Question qustionData={question} />\n      <Answer answer={answer} selectAnswer={selectAnswer} />\n    </div>\n  )\n}\n\nexport default Step\n","import React, { FC, useEffect } from 'react'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { resultMbtiState, resultState } from '../state/dataState'\n\nconst Result: FC = () => {\n  const result = useRecoilValue(resultState)\n  const [resultMbti, setResultMbti] = useRecoilState(resultMbtiState)\n\n  const handleShare = (): void => {\n    // TODO: 공유하기 구현\n  }\n  useEffect(() => {\n    // FIXME: 새로운 함수에 정의하기\n    const sortData = [...result].sort((a, b) => a.qustionCode - b.qustionCode)\n    const mbti = sortData.reduce(\n      (acc, current) =>\n        (current.resultValue[current.firstType] as number) > 1\n          ? acc + current.firstType\n          : acc + current.lastType,\n      '',\n    )\n    console.log('🚀 : mbti', mbti)\n    setResultMbti(mbti)\n  }, [result, setResultMbti])\n\n  // view\n  return (\n    <div className=\"-mb-4 md:-mb-6\">\n      <div>MBTI result:{resultMbti}</div>\n      <div>\n        <button type=\"button\" onClick={handleShare}>\n          공유하기\n        </button>\n        <button type=\"button\">다시 테스트하러 가기</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Result\n","import React, { FC, useEffect } from 'react'\nimport { BrowserRouter, Routes, Route } from 'react-router-dom'\nimport Layout from './components/layout/Layout'\nimport Home from './routes/home'\nimport Step from './routes/step'\nimport Result from './routes/result'\nimport './assets/style/pages.scss'\nimport AOS from 'aos'\n\nimport 'aos/dist/aos.css'\n\nconst App: FC = () => {\n  useEffect(() => {\n    AOS.init({\n      once: false,\n      delay: 50,\n      duration: 1000,\n      easing: 'ease',\n      mirror: true,\n    })\n    AOS.refresh()\n  }, [])\n\n  return (\n    <BrowserRouter>\n      <Layout>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/step\" element={<Step />} />\n          <Route path=\"/result\" element={<Result />} />\n        </Routes>\n      </Layout>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\n\nimport tranEn from './en.json'\nimport tranKo from './ko.json'\n\nexport const languages = {\n  english: 'en',\n  korean: 'ko',\n} as const\nexport type Languages = typeof languages[keyof typeof languages] // 'en' | 'ko'\n\nconst resources = {\n  en: { translation: tranEn },\n  ko: { translation: tranKo },\n}\n\n// const userLanguage = window.navigator.language\n// export const initLanguage = localStorage.getItem('language') || userLanguage || 'en'\nexport const initLanguage: Languages = languages.english\n\ni18n.use(initReactI18next).init({\n  resources,\n  lng: initLanguage,\n  fallbackLng: languages.english,\n  keySeparator: false,\n  interpolation: {\n    escapeValue: false,\n  },\n})\n\nexport default i18n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n// style\nimport 'tailwindcss/tailwind.css'\n// languages\nimport './lang/i18n'\n// wallet connet\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { ExternalProvider, JsonRpcFetchFunc, Web3Provider } from '@ethersproject/providers'\n// state\nimport { RecoilRoot } from 'recoil'\n\n// const MORALIS_APPLICATION_ID = process.env.REACT_APP_MORALIS_APPLICATION_ID || ''\n// const MORALIS_SERVER_URL = process.env.REACT_APP_MORALIS_SERVER_URL || ''\n\nconst getLibrary = (provider: ExternalProvider | JsonRpcFetchFunc): Web3Provider => {\n  const library = new Web3Provider(provider, 'any')\n  return library\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <RecoilRoot>\n        <App />\n      </RecoilRoot>\n    </Web3ReactProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}